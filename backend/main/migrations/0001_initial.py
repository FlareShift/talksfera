# Generated by Django 5.1.5 on 2025-02-06 11:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('cities_light', '0011_alter_city_country_alter_city_region_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Problem_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Sex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='Therapy_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('therapy_type', models.CharField(max_length=45)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=45)),
                ('last_name', models.CharField(max_length=45)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('birth_date', models.DateField(null=True)),
                ('photo', models.CharField(blank=True, max_length=300, null=True)),
                ('is_therapist', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cities_light.city')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_location', to='main.location'),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('therapy_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('range_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_test', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='patient', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='sex',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.sex'),
        ),
        migrations.CreateModel(
            name='Therapist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qualification', models.TextField(blank=True, null=True)),
                ('work_experience', models.IntegerField(default=0)),
                ('available', models.TextField(blank=True, null=True)),
                ('problems', models.ManyToManyField(blank=True, to='main.problem_type')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='therapist', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.therapist')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.therapist')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(max_length=255)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.therapist')),
            ],
        ),
        migrations.CreateModel(
            name='Therapist_Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.specialization')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.therapist')),
            ],
            options={
                'db_table': 'main_therapist_specialization',
                'unique_together': {('therapist', 'specialization')},
            },
        ),
        migrations.AddField(
            model_name='therapist',
            name='specializations',
            field=models.ManyToManyField(blank=True, related_name='therapists', through='main.Therapist_Specialization', to='main.specialization'),
        ),
        migrations.AddField(
            model_name='therapist',
            name='therapy_types',
            field=models.ManyToManyField(blank=True, to='main.therapy_type'),
        ),
        migrations.CreateModel(
            name='User_Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_language_relations', to='main.language')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_language_relations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'language')},
            },
        ),
        migrations.AddField(
            model_name='user',
            name='languages',
            field=models.ManyToManyField(related_name='users', through='main.User_Language', to='main.language'),
        ),
        migrations.CreateModel(
            name='Patient_Problem_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.patient')),
                ('problem_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.problem_type')),
            ],
            options={
                'unique_together': {('patient', 'problem_type')},
            },
        ),
        migrations.CreateModel(
            name='Therapist_Problem_Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.problem_type')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.therapist')),
            ],
            options={
                'unique_together': {('therapist', 'problem_type')},
            },
        ),
        migrations.CreateModel(
            name='Therapist_Therapy_Method',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('therapist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.therapist')),
                ('therapy_method', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.therapy_type')),
            ],
            options={
                'unique_together': {('therapist', 'therapy_method')},
            },
        ),
    ]
