import React, { useState } from "react";
import "./LoginForm.css";
import axios from "axios";
import { Link, useNavigate } from "react-router-dom"; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º useNavigate

const Login = () => {
  const [formData, setFormData] = useState({ username: "", password: "" });
  const [errorMessage, setErrorMessage] = useState("");
  const [successMessage, setSuccessMessage] = useState("");
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate(); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º navigate

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    setLoading(true);
    setErrorMessage("");
    setSuccessMessage("");

    try {
      // –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      const response = await axios.post("http://localhost:8000/api/token/", formData, {
        headers: { "Content-Type": "application/json" },
      });

      console.log("Login response:", response.data); // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞

      const { access, refresh } = response.data;

      if (access && refresh) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã –≤ localStorage
        localStorage.setItem("access_token", access);
        localStorage.setItem("refresh_token", refresh);

        // –î–æ–±–∞–≤–ª—è–µ–º access-—Ç–æ–∫–µ–Ω –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        axios.defaults.headers.common["Authorization"] = `Bearer ${access}`;

        setSuccessMessage("Login successful!");
        setErrorMessage("");

        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        navigate("/"); // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å –ª–∏ —Ç–æ–∫–µ–Ω—ã
        console.log("Stored access token:", localStorage.getItem("access_token"));
        console.log("Stored refresh token:", localStorage.getItem("refresh_token"));
      } else {
        setErrorMessage("Unexpected server response. Please try again.");
      }
    } catch (error) {
      // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å
      console.error("Login error:", error);

      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å–µ—Ä–≤–µ—Ä–∞
      if (error.response) {
        if (error.response.status === 401) {
          setErrorMessage("Invalid email or password. Please try again.");
        } else if (error.response.status === 400) {
          setErrorMessage("Invalid request. Please check your credentials.");
        } else {
          setErrorMessage("An error occurred. Please try again later.");
        }
      } else {
        setErrorMessage("Network error. Please check your internet connection.");
      }
      setSuccessMessage("");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="login-page">
      <div className="login-container">
        <div className="login-box">
          <h2>Log In</h2>
          <div className="signup-link">
            <span>I don‚Äôt have an account </span>
            <Link to="/register">Sign Up</Link>
          </div>
          <form onSubmit={handleSubmit}>
            <div className="input-group">
              <label htmlFor="username">Email</label>
              <input
                type="email"
                id="username"
                name="username"
                placeholder="talksfera@example.com"
                value={formData.username}
                onChange={handleChange}
                required
              />
            </div>
            <div className="input-group">
              <label htmlFor="password">Password</label>
              <div className="password-container">
                <input
                  type="password"
                  id="password"
                  name="password"
                  placeholder="Enter your password"
                  value={formData.password}
                  onChange={handleChange}
                  required
                />
                <button type="button" className="show-password-btn">
                  üëÅÔ∏è
                </button>
              </div>
            </div>

            {errorMessage && <p style={{ color: "red" }}>{errorMessage}</p>}
            {successMessage && <p style={{ color: "green" }}>{successMessage}</p>}

            <button type="submit" className="login-btn" disabled={loading}>
              {loading ? "Logging in..." : "Log In"}
            </button>
          </form>
          <div className="divider">
            <span>or</span>
          </div>
          <div className="social-login">
            <button className="google-btn">Continue with Google</button>
            <button className="apple-btn">Continue with Apple</button>
          </div>
          <a href="/forgot-password" className="forgot-password-link">
            Forgot password?
          </a>
        </div>
      </div>
    </div>
  );
};

export default Login;
